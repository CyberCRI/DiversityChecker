/**********************************************************************
 * Extern for _
 * Generated by http://jmmk.github.io/javascript-externs-generator
 **********************************************************************/
var _ = {
  "VERSION": {},
  "iteratee": function () {},
  "forEach": function () {},
  "each": function () {},
  "collect": function () {},
  "map": function () {},
  "inject": function () {},
  "foldl": function () {},
  "reduce": function () {},
  "foldr": function () {},
  "reduceRight": function () {},
  "detect": function () {},
  "find": function () {},
  "select": function () {},
  "filter": function () {},
  "reject": function () {},
  "all": function () {},
  "every": function () {},
  "any": function () {},
  "some": function () {},
  "include": function () {},
  "includes": function () {},
  "contains": function () {},
  "invoke": function () {},
  "pluck": function () {},
  "where": function () {},
  "findWhere": function () {},
  "max": function () {},
  "min": function () {},
  "shuffle": function () {},
  "sample": function () {},
  "sortBy": function () {},
  "groupBy": function () {},
  "indexBy": function () {},
  "countBy": function () {},
  "toArray": function () {},
  "size": function () {},
  "partition": function () {},
  "take": function () {},
  "head": function () {},
  "first": function () {},
  "initial": function () {},
  "last": function () {},
  "drop": function () {},
  "tail": function () {},
  "rest": function () {},
  "compact": function () {},
  "flatten": function () {},
  "without": function () {},
  "unique": function () {},
  "uniq": function () {},
  "union": function () {},
  "intersection": function () {},
  "difference": function () {},
  "zip": function () {},
  "unzip": function () {},
  "object": function () {},
  "findIndex": function () {},
  "findLastIndex": function () {},
  "sortedIndex": function () {},
  "indexOf": function () {},
  "lastIndexOf": function () {},
  "range": function () {},
  "bind": function () {},
  "partial": function () {},
  "bindAll": function () {},
  "memoize": function () {},
  "delay": function () {},
  "defer": function () {},
  "throttle": function () {},
  "debounce": function () {},
  "wrap": function () {},
  "negate": function () {},
  "compose": function () {},
  "after": function () {},
  "before": function () {},
  "once": function () {},
  "keys": function () {},
  "allKeys": function () {},
  "values": function () {},
  "mapObject": function () {},
  "pairs": function () {},
  "invert": function () {},
  "methods": function () {},
  "functions": function () {},
  "extend": function () {},
  "assign": function () {},
  "extendOwn": function () {},
  "findKey": function () {},
  "pick": function () {},
  "omit": function () {},
  "defaults": function () {},
  "create": function () {},
  "clone": function () {},
  "tap": function () {},
  "isMatch": function () {},
  "isEqual": function () {},
  "isEmpty": function () {},
  "isElement": function () {},
  "isArray": function () {},
  "isObject": function () {},
  "isArguments": function () {},
  "isFunction": function () {},
  "isString": function () {},
  "isNumber": function () {},
  "isDate": function () {},
  "isRegExp": function () {},
  "isError": function () {},
  "isFinite": function () {},
  "isNaN": function () {},
  "isBoolean": function () {},
  "isNull": function () {},
  "isUndefined": function () {},
  "has": function () {},
  "noConflict": function () {},
  "identity": function () {},
  "constant": function () {},
  "noop": function () {},
  "property": function () {},
  "propertyOf": function () {},
  "matches": function () {},
  "matcher": function () {},
  "times": function () {},
  "random": function () {},
  "now": function () {},
  "escape": function () {},
  "unescape": function () {},
  "result": function () {},
  "uniqueId": function () {},
  "templateSettings": {
    "evaluate": {},
    "interpolate": {},
    "escape": {}
  },
  "template": function () {},
  "chain": function () {},
  "mixin": function () {}
};
_.prototype = {
  "after": function () {},
  "all": function () {},
  "allKeys": function () {},
  "any": function () {},
  "assign": function () {},
  "before": function () {},
  "bind": function () {},
  "bindAll": function () {},
  "chain": function () {},
  "clone": function () {},
  "collect": function () {},
  "compact": function () {},
  "compose": function () {},
  "constant": function () {},
  "contains": function () {},
  "countBy": function () {},
  "create": function () {},
  "debounce": function () {},
  "defaults": function () {},
  "defer": function () {},
  "delay": function () {},
  "detect": function () {},
  "difference": function () {},
  "drop": function () {},
  "each": function () {},
  "escape": function () {},
  "every": function () {},
  "extend": function () {},
  "extendOwn": function () {},
  "filter": function () {},
  "find": function () {},
  "findIndex": function () {},
  "findKey": function () {},
  "findLastIndex": function () {},
  "findWhere": function () {},
  "first": function () {},
  "flatten": function () {},
  "foldl": function () {},
  "foldr": function () {},
  "forEach": function () {},
  "functions": function () {},
  "groupBy": function () {},
  "has": function () {},
  "head": function () {},
  "identity": function () {},
  "include": function () {},
  "includes": function () {},
  "indexBy": function () {},
  "indexOf": function () {},
  "initial": function () {},
  "inject": function () {},
  "intersection": function () {},
  "invert": function () {},
  "invoke": function () {},
  "isArguments": function () {},
  "isArray": function () {},
  "isBoolean": function () {},
  "isDate": function () {},
  "isElement": function () {},
  "isEmpty": function () {},
  "isEqual": function () {},
  "isError": function () {},
  "isFinite": function () {},
  "isFunction": function () {},
  "isMatch": function () {},
  "isNaN": function () {},
  "isNull": function () {},
  "isNumber": function () {},
  "isObject": function () {},
  "isRegExp": function () {},
  "isString": function () {},
  "isUndefined": function () {},
  "iteratee": function () {},
  "keys": function () {},
  "last": function () {},
  "lastIndexOf": function () {},
  "map": function () {},
  "mapObject": function () {},
  "matcher": function () {},
  "matches": function () {},
  "max": function () {},
  "memoize": function () {},
  "methods": function () {},
  "min": function () {},
  "mixin": function () {},
  "negate": function () {},
  "noConflict": function () {},
  "noop": function () {},
  "now": function () {},
  "object": function () {},
  "omit": function () {},
  "once": function () {},
  "pairs": function () {},
  "partial": function () {},
  "partition": function () {},
  "pick": function () {},
  "pluck": function () {},
  "property": function () {},
  "propertyOf": function () {},
  "random": function () {},
  "range": function () {},
  "reduce": function () {},
  "reduceRight": function () {},
  "reject": function () {},
  "rest": function () {},
  "result": function () {},
  "sample": function () {},
  "select": function () {},
  "shuffle": function () {},
  "size": function () {},
  "some": function () {},
  "sortBy": function () {},
  "sortedIndex": function () {},
  "tail": function () {},
  "take": function () {},
  "tap": function () {},
  "template": function () {},
  "throttle": function () {},
  "times": function () {},
  "toArray": function () {},
  "unescape": function () {},
  "union": function () {},
  "uniq": function () {},
  "unique": function () {},
  "uniqueId": function () {},
  "unzip": function () {},
  "values": function () {},
  "where": function () {},
  "without": function () {},
  "wrap": function () {},
  "zip": function () {},
  "pop": function () {},
  "push": function () {},
  "reverse": function () {},
  "shift": function () {},
  "sort": function () {},
  "splice": function () {},
  "unshift": function () {},
  "concat": function () {},
  "join": function () {},
  "slice": function () {},
  "value": function () {},
  "toJSON": function () {},
  "valueOf": function () {},
  "toString": function () {}
};
/**********************************************************************
 * End Generated Extern for _
/**********************************************************************/